{"version":3,"file":"main.ef0711509275b38d.hot-update.js","sources":["file://D:\\Project\\GoodsDesign\\GoodsDesign-Mobile\\src\\pages\\LoginPage.tsx","file://D:\\Project\\GoodsDesign\\GoodsDesign-Mobile\\src\\global.css"],"sourcesContent":["import { useState, useEffect } from \"@lynx-js/react\";\nimport { useNavigate } from \"react-router\";\nimport { PictureEnum, pictureMap } from \"../components/images.jsx\";\nimport { useAuthStore } from \"../stores/auth.store.js\";\nimport { API_URL } from \"../graphql/constants.js\";\nimport { LOGIN_MUTATION } from \"../graphql/queries/auth.js\";\n\nexport default function LoginPage() {\n  const nav = useNavigate();\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(false);\n  const [notification, setNotification] = useState(\"\");\n  const login = useAuthStore((state) => state.login);\n  const accessToken = useAuthStore((state) => state.accessToken);\n\n  useEffect(() => {\n    if (accessToken) {\n      nav(\"/task\", { replace: true });\n    }\n  }, [accessToken, nav]);\n\n  const handleLogin = async () => {\n    if (!email || !password) {\n      setNotification(\"Email and password are required\");\n      return;\n    }\n    setIsLoading(true);\n\n    try {\n      const response = await fetch(API_URL, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          query: LOGIN_MUTATION,\n          variables: {\n            loginInput: {\n              email: email,\n              password: password,\n            },\n          },\n        }),\n      });\n\n      if (!response.ok) {\n        throw new Error(`HTTP error! Status: ${response.status}`);\n      }\n\n      const result = await response.json();\n\n      if (result.errors) {\n        const errorMessage =\n          result.errors[0]?.message || \"An error occurred during login.\";\n        setNotification(errorMessage);\n        return;\n      }\n\n      const loginResult = result.data?.login;\n\n      if (!loginResult) {\n        setNotification(\"Login failed: No data returned.\");\n        return;\n      }\n\n      login({\n        accessToken: loginResult.accessToken,\n        refreshToken: loginResult.refreshToken,\n        user: loginResult.user,\n      });\n      setNotification(\"Login successful\");\n      console.log(\"Login successful\");\n      nav(\"/task\", { replace: true });\n    } catch (error) {\n      setNotification(\n        error instanceof Error ? error.message : \"An unknown error occurred\"\n      );\n      console.error(\"Login error\", error);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const handleEmailChange = (event: any) => {\n    setEmail(event.detail.value);\n  };\n\n  const handlePasswordChange = (event: any) => {\n    setPassword(event.detail.value);\n  };\n\n  return (\n    <view className=\"flex items-center justify-center px-6 py-16 bg-white h-screen\">\n      <view className=\"w-full max-w-lg shadow rounded-3xl p-6 -mt-24 bg-white\">\n        {/* Header */}\n        <view className=\"flex-row items-center mb-10\">\n          <image\n            className=\"w-20 h-20 mb-4\"\n            src={pictureMap[PictureEnum.Logo].src}\n          />\n          <text className=\"text-4xl font-bold text-slate-800\">GoodsDesign</text>\n          <text className=\"text-lg text-slate-500 mt-2\">\n            Sign in to your staff account\n          </text>\n        </view>\n\n        {/* Email Field */}\n        <view className=\"mb-6\">\n          <text className=\"text-base font-medium text-slate-700 mb-2\">\n            Email\n          </text>\n          <input\n            type=\"text\"\n            placeholder=\"Enter your email\"\n            value={email}\n            bindinput={handleEmailChange}\n            className=\"w-full h-14 px-5 border border-slate-300 rounded-xl text-lg bg-white\"\n          />\n        </view>\n\n        {/* Password Field */}\n        <view className=\"mb-8\">\n          <text className=\"text-base font-medium text-slate-700 mb-2\">\n            Password\n          </text>\n          <input\n            type=\"password\"\n            placeholder=\"Enter your password\"\n            value={password}\n            bindinput={handlePasswordChange}\n            className=\"w-full h-14 px-5 border border-slate-300 rounded-xl text-lg bg-white\"\n          />\n        </view>\n\n        {/* Login Button */}\n        <view\n          bindtap={handleLogin}\n          className={`h-14 flex items-center justify-center rounded-xl ${\n            isLoading ? \"bg-indigo-400\" : \"bg-indigo-500\"\n          } ${!email || !password ? \"opacity-60\" : \"opacity-100\"}`}\n        >\n          <text className=\"text-white text-lg font-semibold\">\n            {isLoading ? \"Signing in...\" : \"Sign in\"}\n          </text>\n        </view>\n\n        {/* Notification Display */}\n        {notification && (\n          <view className=\"mt-4 p-4 bg-indigo-100 rounded-xl\">\n            <text className=\"text-indigo-600 mt-1\">{notification}</text>\n          </view>\n        )}\n      </view>\n    </view>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport {};\n  if (module.hot) {\n    (function() {\n      var localsJsonString = undefined;\n      // 1746610323520\n      var cssReload = require(\"../node_modules/@lynx-js/css-extract-webpack-plugin/runtime/hotModuleReplacement.cjs\")(module.id, {}, \"\");\n      // only invalidate when locals change\n      if (\n        module.hot.data &&\n        module.hot.data.value &&\n        module.hot.data.value !== localsJsonString\n      ) {\n        module.hot.invalidate();\n      } else {\n        module.hot.accept();\n      }\n      module.hot.dispose(function(data) {\n        data.value = localsJsonString;\n        cssReload();\n      });\n    })();\n  }"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;;;;AAyIA;;;;;;;;AAOA;;AACA;;;;;;;;;;;;;;;AAzDA;;AACA;;;AAEA;;;AAEA;;;AAGA;;;;;AACA;;;;;AAMA;;;AACA;;;;AAGA;AACA;AACA;AAGA;;;AAKA;;;AACA;;;;AAGA;AACA;AACA;AAGA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA5HA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAEA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AA8BA;AA7BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAIA;AAEA;AACA;AAAA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;;AAOA;AAgBA;AACA;AAaA;AACA;AAOA;AACA;;;AAIA;AACA;;;;;;;AAKA;AAEA;;;;;;;;;;;;;AAMA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC5JA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"}