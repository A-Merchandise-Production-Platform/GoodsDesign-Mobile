{"version":3,"file":"main__main-thread.ecffe8ff886b145b.hot-update.js","sources":["file://D:\\Project\\GoodsDesign\\GoodsDesign-Mobile\\src\\graphql\\client.ts","file://D:\\Project\\GoodsDesign\\GoodsDesign-Mobile\\src\\graphql\\queries\\task.ts","file://D:\\Project\\GoodsDesign\\GoodsDesign-Mobile\\src\\pages\\task\\TaskDetailPage.tsx"],"sourcesContent":["import { API_URL } from \"./constants.js\";\n\ninterface GraphQLResponse<T> {\n  data?: T;\n  errors?: Array<{ message: string }>;\n}\n\nexport async function graphqlFetch<T>(\n  query: string,\n  accessToken: string,\n  variables?: Record<string, any>\n): Promise<T> {\n  const response = await fetch(API_URL, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${accessToken}`,\n    },\n    body: JSON.stringify({\n      query,\n      variables,\n    }),\n  });\n\n  if (!response.ok) {\n    throw new Error(`HTTP error! Status: ${response.status}`);\n  }\n\n  const result: GraphQLResponse<T> = await response.json();\n\n  if (result.errors) {\n    throw new Error(result.errors[0]?.message || \"GraphQL query failed\");\n  }\n\n  if (!result.data) {\n    throw new Error(\"No data returned from GraphQL query\");\n  }\n\n  return result.data;\n}\n","export const TASK_QUERY = `\r\nquery GetMyStaffOrders {\r\n  staffOrders {\r\n    acceptanceDeadline\r\n    acceptedAt\r\n    address {\r\n      districtID\r\n      factoryId\r\n      id\r\n      provinceID\r\n      street\r\n      wardCode\r\n    }\r\n    addressId\r\n    assignedAt\r\n    completedAt\r\n    currentProgress\r\n    customer {\r\n      imageUrl\r\n      name\r\n      email\r\n    }\r\n    customerId\r\n    delayReason\r\n    doneCheckQualityAt\r\n    doneProductionAt\r\n    estimatedCheckQualityAt\r\n    estimatedCompletionAt\r\n    estimatedDoneProductionAt\r\n    estimatedShippingAt\r\n    factory {\r\n      name\r\n      owner {\r\n        name\r\n        imageUrl\r\n        email\r\n      }\r\n    }\r\n    id\r\n    isDelayed\r\n    orderDate\r\n    orderDetails {\r\n      systemConfigVariant {\r\n        id\r\n        isActive\r\n        isDeleted\r\n        price\r\n        color\r\n        size\r\n        model\r\n        product {\r\n            name\r\n            imageUrl\r\n          }\r\n      }\r\n      checkQualities {\r\n        totalChecked\r\n        status\r\n        passedQuantity\r\n        orderDetailId\r\n        task {\r\n          taskname\r\n          taskType\r\n          status\r\n          startDate\r\n          note\r\n          id\r\n          expiredTime\r\n          description\r\n          completedDate\r\n          assignee {\r\n            email\r\n            name\r\n            imageUrl\r\n            id\r\n          }\r\n          assignedDate\r\n        }\r\n      }\r\n      completedQty\r\n      createdAt\r\n      design {\r\n        thumbnailUrl\r\n        systemConfigVariantId\r\n        isTemplate\r\n        isPublic\r\n        isFinalized\r\n        id\r\n        systemConfigVariant {\r\n          color\r\n          id\r\n          isActive\r\n          isDeleted\r\n          model\r\n          price\r\n          product {\r\n            name\r\n            imageUrl\r\n          }\r\n          productId\r\n          size\r\n        }\r\n        designPositions {\r\n          positionType {\r\n            positionName\r\n            basePrice\r\n          }\r\n          designJSON\r\n        }\r\n      }\r\n      id\r\n      isRework\r\n      price\r\n      productionCost\r\n      quantity\r\n      rejectedQty\r\n      reworkTime\r\n      status\r\n      updatedAt\r\n    }\r\n    orderProgressReports {\r\n      reportDate\r\n      note\r\n      imageUrls\r\n      id\r\n    }\r\n    payments {\r\n      id\r\n      type\r\n      paymentLog\r\n      amount\r\n      transactions {\r\n        imageUrls\r\n        transactionLog\r\n        status\r\n        paymentMethod\r\n        createdAt\r\n        amount\r\n        id\r\n        type\r\n      }\r\n      status\r\n    }\r\n    ratedAt\r\n    ratedBy\r\n    rating\r\n    ratingComment\r\n    rejectedHistory {\r\n      rejectedAt\r\n      reassignedTo\r\n      reassignedAt\r\n      reason\r\n      id\r\n      factory {\r\n        name\r\n        contractUrl\r\n        address {\r\n          wardCode\r\n          street\r\n          districtID\r\n          provinceID\r\n        }\r\n        owner {\r\n          name\r\n          email\r\n          imageUrl\r\n        }\r\n      }\r\n    }\r\n    shippedAt\r\n    shippingPrice\r\n    status\r\n    tasks {\r\n      taskname\r\n      taskType\r\n      id\r\n      status\r\n      startDate\r\n      note\r\n      description\r\n      expiredTime\r\n      completedDate\r\n      assignee {\r\n        name\r\n        imageUrl\r\n        email\r\n      }\r\n      assignedDate\r\n    }\r\n    totalItems\r\n    totalPrice\r\n    totalProductionCost\r\n    updatedAt\r\n  }\r\n}\r\n`;\r\n\r\nexport const GET_TASK_DETAIL_QUERY = `query GetOrder($orderId: String!) {\r\n  order(id: $orderId) {\r\n    acceptanceDeadline\r\n    acceptedAt\r\n    orderEvaluationCriteria {\r\n      createdAt\r\n      evaluationCriteria {\r\n        id\r\n        description\r\n        name\r\n        updatedAt\r\n      }\r\n    }\r\n    orderCode\r\n    address {\r\n      districtID\r\n      factoryId\r\n      id\r\n      provinceID\r\n      street\r\n      wardCode\r\n      formattedAddress\r\n    }\r\n    addressId\r\n    assignedAt\r\n    completedAt\r\n    currentProgress\r\n    customer {\r\n      imageUrl\r\n      name\r\n      email\r\n    }\r\n    customerId\r\n    delayReason\r\n    doneCheckQualityAt\r\n    doneProductionAt\r\n    estimatedCheckQualityAt\r\n    estimatedCompletionAt\r\n    estimatedDoneProductionAt\r\n    estimatedShippingAt\r\n    factory {\r\n      name\r\n      owner {\r\n        name\r\n        imageUrl\r\n        email\r\n      }\r\n      address {\r\n        districtID\r\n        street\r\n        id\r\n        provinceID\r\n        wardCode\r\n        formattedAddress\r\n      }\r\n    }\r\n    id\r\n    isDelayed\r\n    orderDate\r\n    orderDetails {\r\n      systemConfigVariant {\r\n        id\r\n        isActive\r\n        isDeleted\r\n        price\r\n        color\r\n        size\r\n        model\r\n        product {\r\n          name\r\n          imageUrl\r\n        }\r\n      }\r\n      checkQualities {\r\n        id\r\n        totalChecked\r\n        status\r\n        passedQuantity\r\n        orderDetailId\r\n        task {\r\n          taskname\r\n          taskType\r\n          status\r\n          startDate\r\n          note\r\n          id\r\n          expiredTime\r\n          description\r\n          completedDate\r\n          assignee {\r\n            email\r\n            name\r\n            imageUrl\r\n            id\r\n          }\r\n          assignedDate\r\n        }\r\n      }\r\n      completedQty\r\n      createdAt\r\n      design {\r\n        thumbnailUrl\r\n        systemConfigVariantId\r\n        isTemplate\r\n        isPublic\r\n        isFinalized\r\n        id\r\n        systemConfigVariant {\r\n          color\r\n          id\r\n          isActive\r\n          isDeleted\r\n          model\r\n          price\r\n          product {\r\n            name\r\n            imageUrl\r\n          }\r\n          productId\r\n          size\r\n        }\r\n        designPositions {\r\n          positionType {\r\n            positionName\r\n            basePrice\r\n          }\r\n          designJSON\r\n        }\r\n      }\r\n      id\r\n      isRework\r\n      price\r\n      productionCost\r\n      quantity\r\n      rejectedQty\r\n      reworkTime\r\n      status\r\n      updatedAt\r\n    }\r\n    orderProgressReports {\r\n      reportDate\r\n      note\r\n      imageUrls\r\n      id\r\n    }\r\n    payments {\r\n      id\r\n      type\r\n      paymentLog\r\n      amount\r\n      transactions {\r\n        imageUrls\r\n        transactionLog\r\n        status\r\n        paymentMethod\r\n        createdAt\r\n        amount\r\n        id\r\n        type\r\n      }\r\n      status\r\n    }\r\n    ratedAt\r\n    ratedBy\r\n    rating\r\n    ratingComment\r\n    rejectedHistory {\r\n      rejectedAt\r\n      reassignedTo\r\n      reassignedAt\r\n      reason\r\n      id\r\n      factory {\r\n        name\r\n        contractUrl\r\n        address {\r\n          wardCode\r\n          street\r\n          districtID\r\n          provinceID\r\n        }\r\n        owner {\r\n          name\r\n          email\r\n          imageUrl\r\n        }\r\n      }\r\n    }\r\n    shippedAt\r\n    shippingPrice\r\n    status\r\n    tasks {\r\n      taskname\r\n      taskType\r\n      id\r\n      status\r\n      startDate\r\n      note\r\n      description\r\n      expiredTime\r\n      completedDate\r\n      assignee {\r\n        name\r\n        imageUrl\r\n        email\r\n      }\r\n      assignedDate\r\n    }\r\n    totalItems\r\n    totalPrice\r\n    totalProductionCost\r\n    updatedAt\r\n  }\r\n}`;\r\n\r\nexport const CHECK_QUALITY_MUTATION = `mutation DoneCheckQuality($input: DoneCheckQualityInput!) {\r\n  doneCheckQuality(input: $input) {\r\n    id\r\n  }\r\n}`;\r\n","\"use client\";\n\nimport { useState, useEffect } from \"@lynx-js/react\";\nimport { useParams, useNavigate } from \"react-router\";\nimport { useAuthStore } from \"../../stores/auth.store.js\";\nimport { GET_TASK_DETAIL_QUERY } from \"../../graphql/queries/task.js\";\nimport { CHECK_QUALITY_MUTATION } from \"../../graphql/queries/task.js\";\nimport { graphqlFetch } from \"../../graphql/client.js\";\nimport type { Order } from \"../../types/task.js\";\nimport { formatCurrency, formatDate, formatTime } from \"../../utils/format.js\";\n\nenum OrderStatus {\n  WaitingForCheckingQuality = \"WAITING_FOR_CHECKING_QUALITY\",\n  ReworkRequired = \"REWORK_REQUIRED\",\n}\n\nenum OrderDetailStatus {\n  Pending = \"PENDING\",\n  Completed = \"COMPLETED\",\n}\n\nexport default function TaskDetailPage() {\n  const { id } = useParams();\n  const nav = useNavigate();\n  const { accessToken } = useAuthStore();\n  const [order, setOrder] = useState<Order | null>(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n  const [activeTab, setActiveTab] = useState<\"details\" | \"quality\" | \"tasks\">(\n    \"details\"\n  );\n  const [selectedOrderDetailIndex, setSelectedOrderDetailIndex] = useState(0);\n\n  const [qualityCheckLoading, setQualityCheckLoading] = useState(false);\n  const [qualityCheckError, setQualityCheckError] = useState<string | null>(\n    null\n  );\n  const [qualityCheckSuccess, setQualityCheckSuccess] = useState(false);\n  const [passedQty, setPassedQty] = useState<number>(0);\n  const [note, setNote] = useState<string>(\"\");\n\n  useEffect(() => {\n    const fetchOrderDetails = async () => {\n      if (!accessToken) {\n        setError(\"User not authenticated\");\n        setLoading(false);\n        return;\n      }\n\n      try {\n        const result = await graphqlFetch<{ order: Order }>(\n          GET_TASK_DETAIL_QUERY,\n          accessToken,\n          { orderId: id }\n        );\n        setOrder(result.order);\n      } catch (err) {\n        setError(\n          err instanceof Error ? err.message : \"An unknown error occurred\"\n        );\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchOrderDetails();\n  }, [accessToken, id]);\n\n  // Get status color\n  const getStatusColor = (status: string, isDelayed: boolean) => {\n    if (isDelayed)\n      return {\n        bg: \"bg-red-100\",\n        text: \"text-red-600\",\n        border: \"border-red-200\",\n      };\n    if (status === \"COMPLETED\")\n      return {\n        bg: \"bg-green-100\",\n        text: \"text-green-600\",\n        border: \"border-green-200\",\n      };\n    if (status === \"IN_PROGRESS\")\n      return {\n        bg: \"bg-blue-100\",\n        text: \"text-blue-600\",\n        border: \"border-blue-200\",\n      };\n    return {\n      bg: \"bg-yellow-100\",\n      text: \"text-yellow-600\",\n      border: \"border-yellow-200\",\n    };\n  };\n\n  const handleQualityCheck = async (\n    checkQualityId: string,\n    passedQuantity: number\n  ) => {\n    if (!accessToken) {\n      setQualityCheckError(\"User not authenticated\");\n      return;\n    }\n\n    setQualityCheckLoading(true);\n    setQualityCheckError(null);\n    setQualityCheckSuccess(false);\n\n    try {\n      const result = await graphqlFetch<{ doneCheckQuality: { id: string } }>(\n        CHECK_QUALITY_MUTATION,\n        accessToken,\n        {\n          input: {\n            checkQualityId,\n            passedQuantity,\n            failedQuantity: selectedOrderDetail\n              ? selectedOrderDetail.quantity - passedQuantity\n              : 0,\n            note,\n          },\n        }\n      );\n\n      if (result.doneCheckQuality?.id) {\n        setQualityCheckSuccess(true);\n\n        // Refresh order data\n        const updatedOrder = await graphqlFetch<{ order: Order }>(\n          GET_TASK_DETAIL_QUERY,\n          accessToken,\n          { orderId: id }\n        );\n        setOrder(updatedOrder.order);\n      }\n    } catch (err) {\n      setQualityCheckError(\n        err instanceof Error ? err.message : \"An unknown error occurred\"\n      );\n    } finally {\n      setQualityCheckLoading(false);\n    }\n  };\n\n  if (loading) {\n    return (\n      <view className=\"items-center justify-center bg-gray-50\">\n        <view className=\"p-8 rounded-2xl bg-white shadow-lg\">\n          <view className=\"items-center\">\n            <view className=\"w-12 h-12 rounded-full border-3 border-blue-500 border-t-transparent animate-spin mb-4\" />\n            <text className=\"text-gray-700 font-medium text-lg text-center\">\n              Loading order details...\n            </text>\n          </view>\n        </view>\n      </view>\n    );\n  }\n\n  if (error) {\n    return (\n      <view className=\"items-center justify-center bg-gray-50 p-4\">\n        <view className=\"p-8 rounded-2xl bg-red-50 shadow-lg border border-red-200\">\n          <text className=\"text-red-600 font-bold text-xl mb-3 text-center\">\n            Unable to load order details\n          </text>\n          <text className=\"text-red-500 text-center mb-6\">{error}</text>\n          <view className=\"bg-white rounded-xl p-5 border border-red-100\">\n            <text className=\"text-gray-700 text-center\">\n              Please check your connection and tap here to try again.\n            </text>\n          </view>\n        </view>\n      </view>\n    );\n  }\n\n  if (!order) {\n    return (\n      <view className=\"items-center justify-center bg-gray-50 p-4\">\n        <view className=\"p-8 rounded-2xl bg-yellow-50 shadow-lg border border-yellow-200\">\n          <text className=\"text-yellow-600 font-bold text-xl mb-3 text-center\">\n            Order not found\n          </text>\n          <text className=\"text-yellow-500 text-center mb-6\">\n            The order you're looking for doesn't exist or you don't have\n            permission to view it.\n          </text>\n          <view\n            className=\"bg-white rounded-xl p-5 border border-yellow-100\"\n            bindtap={() => nav(\"/tasks\", { replace: true })}\n          >\n            <text className=\"text-gray-700 text-center\">\n              Return to task list\n            </text>\n          </view>\n        </view>\n      </view>\n    );\n  }\n\n  const statusStyle = getStatusColor(order.status, order.isDelayed);\n  const progressPercentage = Math.min(order.currentProgress, 100);\n  const selectedOrderDetail = order.orderDetails?.[selectedOrderDetailIndex];\n\n  return (\n    <scroll-view\n      scroll-orientation=\"vertical\"\n      className=\"pt-4 pb-4 w-full h-full\"\n    >\n      {/* Header with back button */}\n      <view className=\"px-5 py-6\">\n        <view className=\"flex-row\">\n          <view className=\"flex items-center justify-between\">\n            <view\n              className=\"rounded-md bg-gray-200 flex items-center justify-center w-28 h-10\"\n              bindtap={() => nav(\"/task\", { replace: true })}\n            >\n              <text className=\"font-bold text-3xl mb-3\">← </text>\n              <text className=\"font-medium text-lg -ml-1\">Back</text>\n            </view>\n\n            <view className=\"flex-row items-center px-4\">\n              <text className=\"font-medium\">\n                Hi, {useAuthStore.getState().user?.name || \"User\"}\n              </text>\n              <view\n                className=\"rounded-md bg-gray-200 flex items-center justify-center w-28 h-10 mt-2\"\n                bindtap={() => {\n                  useAuthStore.getState().logout();\n                  nav(\"/\", { replace: true });\n                }}\n              >\n                <text className=\"font-medium\">Logout</text>\n                <text className=\"-mt-3 text-4xl\">↪</text>\n              </view>\n            </view>\n          </view>\n\n          <view className=\"mt-4\">\n            <text className=\"text-xl font-bold\">Order #{order.id}</text>\n            <text className=\"mt-1\">\n              Ordered on: {formatDate(order.orderDate)}\n            </text>\n          </view>\n        </view>\n      </view>\n      {/* Status Card */}\n      <view className=\"px-4\">\n        <view className=\"bg-white rounded-2xl border border-gray-200 p-5\">\n          <view className=\"flex-row justify-between items-center mb-4\">\n            <text className=\"text-lg font-bold text-gray-800\">\n              Order Status\n            </text>\n            <view\n              className={`px-4 py-2 rounded-full ${statusStyle.bg} border ${statusStyle.border}`}\n            >\n              <text className={`text-sm font-bold ${statusStyle.text}`}>\n                {order.isDelayed ? \"DELAYED\" : order.status}\n              </text>\n            </view>\n          </view>\n\n          <view className=\"mb-4\">\n            <text className=\"text-sm text-gray-500 mb-2\">Progress</text>\n            <view className=\"flex-row justify-between mb-2\">\n              <text className=\"text-lg font-bold text-gray-800\">\n                {progressPercentage}% Complete\n              </text>\n              {order.estimatedCompletionAt && (\n                <text className=\"text-sm text-gray-500\">\n                  Est. completion: {formatDate(order.estimatedCompletionAt)}\n                </text>\n              )}\n            </view>\n            <view className=\"h-4 bg-gray-200 rounded-full overflow-hidden shadow-inner\">\n              <view\n                className={`h-full rounded-full ${\n                  order.isDelayed\n                    ? \"bg-red-500\"\n                    : progressPercentage >= 100\n                    ? \"bg-green-500\"\n                    : \"bg-blue-500\"\n                }`}\n                style={{\n                  width: `${progressPercentage}%`,\n                }}\n              />\n            </view>\n          </view>\n\n          <view className=\"flex-row justify-between\">\n            <view className=\"items-center mb-2\">\n              <text className=\"text-sm text-gray-500\">Total Items</text>\n              <text className=\"text-lg font-bold text-gray-800\">\n                {order.totalItems}\n              </text>\n            </view>\n            <view className=\"items-center mb-2\">\n              <text className=\"text-sm text-gray-500\">Total Price</text>\n              <text className=\"text-lg font-bold text-gray-800\">\n                {formatCurrency(order.totalPrice)}\n              </text>\n            </view>\n            <view className=\"items-center\">\n              <text className=\"text-sm text-gray-500\">Shipping</text>\n              <text className=\"text-lg font-bold text-gray-800\">\n                {formatCurrency(order.shippingPrice)}\n              </text>\n            </view>\n          </view>\n        </view>\n      </view>\n      {/* Customer & Factory Info */}\n      <view className=\"px-4 mt-4\">\n        <view className=\"bg-white rounded-2xl border border-gray-200 p-5\">\n          <view className=\"flex-row justify-between mb-6\">\n            <view className=\"mb-6\">\n              <text className=\"uppercase text-gray-500 font-bold mb-2\">\n                Customer\n              </text>\n              <view className=\"flex-row items-center bg-gray-50 p-3 rounded-xl border border-gray-200\">\n                <view className=\"w-10 h-10 rounded-full bg-blue-100 items-center justify-center\">\n                  <text className=\"text-blue-600 font-bold text-lg\">\n                    {order?.customer?.name?.charAt(0) || \"C\"}\n                  </text>\n                </view>\n                <text className=\"text-gray-800 font-semibold mt-1\">\n                  {order?.customer.name}\n                </text>\n                <text className=\"text-gray-500 text-sm\">\n                  {order.customer?.email}\n                </text>\n              </view>\n            </view>\n            <view className=\"\">\n              <text className=\" uppercase text-gray-500 font-bold mb-2\">\n                Factory\n              </text>\n              <view className=\"flex-row items-center bg-gray-50 p-3 rounded-xl border border-gray-200\">\n                <view className=\"w-10 h-10 rounded-full bg-purple-100 items-center justify-center\">\n                  <text className=\"text-purple-600 font-bold text-lg\">\n                    {order.factory?.name?.charAt(0) || \"F\"}\n                  </text>\n                </view>\n                <text className=\"text-gray-800 font-semibold\">\n                  {order.factory?.name || \"Not assigned\"}\n                </text>\n                {order.factory?.owner && (\n                  <text className=\"text-gray-500 text-sm\">\n                    {order.factory.owner.name}\n                  </text>\n                )}\n              </view>\n            </view>\n          </view>\n\n          <view>\n            <text className=\" uppercase text-gray-500 font-bold mb-2\">\n              Addresses\n            </text>\n            <view className=\"bg-gray-50 p-4 rounded-xl border border-gray-200 mb-3\">\n              <text className=\"text-sm font-semibold text-gray-700 mb-1\">\n                Shipping Address:\n              </text>\n              <text className=\"text-sm text-gray-600\">\n                {order.address?.formattedAddress || \"No address provided\"}\n              </text>\n            </view>\n            <view className=\"bg-gray-50 p-4 rounded-xl border border-gray-200\">\n              <text className=\"text-sm font-semibold text-gray-700 mb-1\">\n                Factory Address:\n              </text>\n              <text className=\"text-sm text-gray-600\">\n                {order.factory?.address?.formattedAddress ||\n                  \"No address provided\"}\n              </text>\n            </view>\n          </view>\n        </view>\n      </view>\n      {/* Tabs */}\n      <view className=\"flex-row bg-white border-b border-gray-200 mt-6\">\n        <view\n          className={`py-4 px-5 items-center justify-center ${\n            activeTab === \"details\"\n              ? \"border-b-3 border-blue-500 bg-blue-50\"\n              : \"\"\n          }`}\n          bindtap={() => setActiveTab(\"details\")}\n        >\n          <text\n            className={`font-semibold ${\n              activeTab === \"details\" ? \"text-blue-600\" : \"text-gray-600\"\n            }`}\n          >\n            Details\n          </text>\n        </view>\n        <view\n          className={`py-4 px-5 items-center justify-center ${\n            activeTab === \"quality\"\n              ? \"border-b-3 border-blue-500 bg-blue-50\"\n              : \"\"\n          }`}\n          bindtap={() => setActiveTab(\"quality\")}\n        >\n          <text\n            className={`font-semibold ${\n              activeTab === \"quality\" ? \"text-blue-600\" : \"text-gray-600\"\n            }`}\n          >\n            Quality\n          </text>\n        </view>\n        <view\n          className={`py-4 px-5 items-center justify-center ${\n            activeTab === \"tasks\" ? \"border-b-3 border-blue-500 bg-blue-50\" : \"\"\n          }`}\n          bindtap={() => setActiveTab(\"tasks\")}\n        >\n          <text\n            className={`font-semibold ${\n              activeTab === \"tasks\" ? \"text-blue-600\" : \"text-gray-600\"\n            }`}\n          >\n            Tasks\n          </text>\n        </view>\n      </view>\n      {/* Tab Content */}\n      <view className=\"px-4 mt-4\">\n        {/* Details Tab */}\n        {activeTab === \"details\" && (\n          <view>\n            {/* Order Details */}\n            <view className=\"bg-white rounded-2xl border border-gray-200 p-5 mb-4\">\n              <text className=\"text-lg font-bold text-gray-800 mb-4\">\n                Order Timeline\n              </text>\n              <view className=\"ml-3\">\n                <view className=\"border-l-2 border-blue-500 pl-4 pb-6 relative\">\n                  <view className=\"w-4 h-4 rounded-full bg-blue-500 absolute -left-[8px] top-0\" />\n                  <text className=\"font-semibold text-gray-800\">\n                    Order Placed\n                  </text>\n                  <text className=\"text-sm text-gray-500\">\n                    {formatDate(order.orderDate)} at{\" \"}\n                    {formatTime(order.orderDate)}\n                  </text>\n                </view>\n\n                {order.assignedAt && (\n                  <view className=\"border-l-2 border-blue-500 pl-4 pb-6 relative\">\n                    <view className=\"w-4 h-4 rounded-full bg-blue-500 absolute -left-[8px] top-0\" />\n                    <text className=\"font-semibold text-gray-800\">\n                      Assigned to Factory\n                    </text>\n                    <text className=\"text-sm text-gray-500\">\n                      {formatDate(order.assignedAt)} at{\" \"}\n                      {formatTime(order.assignedAt)}\n                    </text>\n                  </view>\n                )}\n\n                {order.acceptedAt && (\n                  <view className=\"border-l-2 border-blue-500 pl-4 pb-6 relative\">\n                    <view className=\"w-4 h-4 rounded-full bg-blue-500 absolute -left-[8px] top-0\" />\n                    <text className=\"font-semibold text-gray-800\">\n                      Accepted by Factory\n                    </text>\n                    <text className=\"text-sm text-gray-500\">\n                      {formatDate(order.acceptedAt)} at{\" \"}\n                      {formatTime(order.acceptedAt)}\n                    </text>\n                  </view>\n                )}\n\n                {order.doneProductionAt && (\n                  <view className=\"border-l-2 border-blue-500 pl-4 pb-6 relative\">\n                    <view className=\"w-4 h-4 rounded-full bg-blue-500 absolute -left-[8px] top-0\" />\n                    <text className=\"font-semibold text-gray-800\">\n                      Production Completed\n                    </text>\n                    <text className=\"text-sm text-gray-500\">\n                      {formatDate(order.doneProductionAt)} at{\" \"}\n                      {formatTime(order.doneProductionAt)}\n                    </text>\n                  </view>\n                )}\n\n                {order.doneCheckQualityAt && (\n                  <view className=\"border-l-2 border-blue-500 pl-4 pb-6 relative\">\n                    <view className=\"w-4 h-4 rounded-full bg-blue-500 absolute -left-[8px] top-0\" />\n                    <text className=\"font-semibold text-gray-800\">\n                      Quality Check Completed\n                    </text>\n                    <text className=\"text-sm text-gray-500\">\n                      {formatDate(order.doneCheckQualityAt)} at{\" \"}\n                      {formatTime(order.doneCheckQualityAt)}\n                    </text>\n                  </view>\n                )}\n\n                {order.shippedAt && (\n                  <view className=\"border-l-2 border-blue-500 pl-4 pb-6 relative\">\n                    <view className=\"w-4 h-4 rounded-full bg-blue-500 absolute -left-[8px] top-0\" />\n                    <text className=\"font-semibold text-gray-800\">Shipped</text>\n                    <text className=\"text-sm text-gray-500\">\n                      {formatDate(order.shippedAt)} at{\" \"}\n                      {formatTime(order.shippedAt)}\n                    </text>\n                  </view>\n                )}\n\n                {order.completedAt && (\n                  <view className=\"border-l-2 border-blue-500 pl-4 relative\">\n                    <view className=\"w-4 h-4 rounded-full bg-green-500 absolute -left-[8px] top-0\" />\n                    <text className=\"font-semibold text-gray-800\">\n                      Completed\n                    </text>\n                    <text className=\"text-sm text-gray-500\">\n                      {formatDate(order.completedAt)} at{\" \"}\n                      {formatTime(order.completedAt)}\n                    </text>\n                  </view>\n                )}\n\n                {!order.completedAt && (\n                  <view className=\"border-l-2 border-gray-300 pl-4 relative\">\n                    <view className=\"w-4 h-4 rounded-full bg-gray-300 absolute -left-[8px] top-0\" />\n                    <text className=\"font-semibold text-gray-400\">\n                      Pending Completion\n                    </text>\n                    {order.estimatedCompletionAt && (\n                      <text className=\"text-sm text-gray-400\">\n                        Estimated: {formatDate(order.estimatedCompletionAt)}\n                      </text>\n                    )}\n                  </view>\n                )}\n              </view>\n            </view>\n\n            {/* Products */}\n            <view className=\"bg-white rounded-2xl border border-gray-200 p-5 mb-4\">\n              <text className=\"text-lg font-bold text-gray-800 mb-4\">\n                {order.orderDetails?.length > 1 ? \"Products\" : \"Product\"}(\n                {order.orderDetails?.length || 0})\n              </text>\n\n              {order.orderDetails?.map((detail, index) => (\n                <view\n                  key={detail.id}\n                  className={`p-4 rounded-xl ${\n                    index === selectedOrderDetailIndex\n                      ? \"bg-blue-50 border border-blue-200\"\n                      : \"bg-gray-50 border border-gray-200\"\n                  } mb-3`}\n                  bindtap={() => setSelectedOrderDetailIndex(index)}\n                >\n                  <view className=\"flex-row justify-between items-center\">\n                    <view className=\"flex-row items-center\">\n                      <view className=\"w-28 h-28 rounded-md\">\n                        {detail.design?.thumbnailUrl && (\n                          <image\n                            src={detail.design.thumbnailUrl}\n                            className=\"w-28 h-28 rounded-md\"\n                          />\n                        )}\n                      </view>\n                      <view className=\"flex justify-center\">\n                        {/* <text className=\"font-semibold text-gray-800\">\n                          {detail.systemConfigVariant?.product?.name ||\n                            \"Product\"}\n                        </text> */}\n                        <text className=\"text-sm text-gray-500 flex items-center\">\n                          {detail.systemConfigVariant?.size} •{\" \"}\n                          <view\n                            className=\"w-3 h-3 rounded-full mr-1\"\n                            style={{\n                              backgroundColor:\n                                detail.systemConfigVariant?.color || \"#ccc\",\n                            }}\n                          />\n                        </text>\n                      </view>\n                    </view>\n                    <view className=\"flex items-center\">\n                      <text className=\"font-bold text-gray-800 mr-2\">\n                        {detail.quantity}x\n                      </text>\n                      <text className=\"text-sm text-gray-500\">\n                        {formatCurrency(detail.price)}\n                      </text>\n                    </view>\n                  </view>\n                </view>\n              ))}\n            </view>\n\n            {/* Progress Reports */}\n            {order.orderProgressReports &&\n              order.orderProgressReports.length > 0 && (\n                <view className=\"bg-white rounded-2xl border border-gray-200 p-5 mb-4\">\n                  <text className=\"text-lg font-bold text-gray-800 mb-4\">\n                    Progress Reports\n                  </text>\n\n                  {order.orderProgressReports.map((report, index) => (\n                    <view\n                      key={report.id}\n                      className=\"p-4 rounded-xl bg-gray-50 border border-gray-200 mb-3\"\n                    >\n                      <view className=\"flex-row justify-between items-center mb-2\">\n                        <text className=\"font-semibold text-gray-800\">\n                          Report #{index + 1}\n                        </text>\n                        <text className=\"text-sm text-gray-500\">\n                          {formatDate(report.reportDate)}\n                        </text>\n                      </view>\n\n                      {report.note && (\n                        <text className=\"text-gray-700 mb-3\">\n                          {report.note}\n                        </text>\n                      )}\n\n                      {report.imageUrls && report.imageUrls.length > 0 && (\n                        <view className=\"flex-row flex-wrap\">\n                          {report.imageUrls.map((url, imgIndex) => (\n                            <view\n                              key={imgIndex}\n                              className=\"w-20 h-20 mr-2 mb-2\"\n                            >\n                              <image\n                                src={url}\n                                className=\"w-20 h-20 rounded-md object-cover\"\n                              />\n                            </view>\n                          ))}\n                        </view>\n                      )}\n                    </view>\n                  ))}\n                </view>\n              )}\n\n            {/* Payment Information */}\n            {order.payments && order.payments.length > 0 && (\n              <view className=\"bg-white rounded-2xl border border-gray-200 p-5 mb-4\">\n                <text className=\"text-lg font-bold text-gray-800 mb-4\">\n                  Payment Information\n                </text>\n\n                {order.payments.map((payment) => (\n                  <view\n                    key={payment.id}\n                    className=\"p-4 rounded-xl bg-gray-50 border border-gray-200 mb-3\"\n                  >\n                    <view className=\"flex-row justify-between items-center mb-2\">\n                      <text className=\"font-semibold text-gray-800\">\n                        {payment.type}\n                      </text>\n                      <view\n                        className={`mt-1 px-3 py-1 rounded-full ${\n                          payment.status === \"COMPLETED\"\n                            ? \"bg-green-100 text-green-600\"\n                            : \"bg-yellow-100 text-yellow-600\"\n                        }`}\n                      >\n                        <text className=\" font-bold\">{payment.status}</text>\n                      </view>\n                    </view>\n\n                    <view className=\"flex mb-2\">\n                      <text className=\"text-gray-500\">Amount:</text>\n                      <text className=\"ml-1 font-bold text-gray-800\">\n                        {formatCurrency(payment.amount)}\n                      </text>\n                    </view>\n\n                    {payment.transactions &&\n                      payment.transactions.length > 0 && (\n                        <view>\n                          <text className=\"text-sm font-semibold text-gray-700 mb-2\">\n                            Transactions:\n                          </text>\n\n                          {payment.transactions.map((transaction) => (\n                            <view\n                              key={transaction.id}\n                              className=\"p-3 rounded-lg bg-white border border-gray-200 mb-2\"\n                            >\n                              <view className=\"flex justify-between mb-1\">\n                                <text className=\"text-sm text-gray-500\">\n                                  {transaction.paymentMethod}\n                                </text>\n                                <text className=\"text-sm font-semibold text-gray-800\">\n                                  {formatCurrency(transaction.amount)}\n                                </text>\n                              </view>\n                              <view className=\"flex justify-between\">\n                                <text className=\" text-gray-500\">\n                                  {formatDate(transaction.createdAt)}\n                                </text>\n                                <view\n                                  className={`px-2 py-0.5 rounded-full ${\n                                    transaction.status === \"COMPLETED\"\n                                      ? \"bg-green-100 text-green-600\"\n                                      : \"bg-yellow-100 text-yellow-600\"\n                                  }`}\n                                >\n                                  <text className=\" font-bold\">\n                                    {transaction.status}\n                                  </text>\n                                </view>\n                              </view>\n                            </view>\n                          ))}\n                        </view>\n                      )}\n                  </view>\n                ))}\n              </view>\n            )}\n          </view>\n        )}\n\n        {/* Quality Tab */}\n        {activeTab === \"quality\" && (\n          <view>\n            {/* Evaluation Criteria Section */}\n            {order.orderEvaluationCriteria &&\n              order.orderEvaluationCriteria.length > 0 && (\n                <view className=\"mb-6\">\n                  <text className=\"text-md font-medium mb-3\">\n                    Evaluation Criteria ({order.orderEvaluationCriteria.length}\n                    ):\n                  </text>\n                  <view className=\"space-y-3\">\n                    {order.orderEvaluationCriteria.map((criteria, index) => (\n                      <view\n                        key={criteria.evaluationCriteria.id}\n                        className=\"bg-gray-50 p-4 rounded-lg border border-gray-200\"\n                      >\n                        <text className=\"font-medium text-gray-800\">\n                          {criteria.evaluationCriteria.name}\n                        </text>\n                        <text className=\"text-gray-600 mt-1 block\">\n                          {criteria.evaluationCriteria.description}\n                        </text>\n                      </view>\n                    ))}\n                  </view>\n                </view>\n              )}\n\n            {/* Product Selection */}\n            <view className=\"bg-white rounded-2xl border border-gray-200 p-5 mb-4\">\n              <text className=\"text-lg font-bold text-gray-800 mb-4\">\n                Select Product\n              </text>\n\n              <scroll-view\n                scroll-orientation=\"horizontal\"\n                style={{\n                  width: \"calc(100% - 10px)\",\n                  height: \"100px\",\n                }}\n                className=\"mb-4\"\n              >\n                <view className=\"flex\">\n                  {order.orderDetails?.map((detail, index) => (\n                    <view\n                      key={detail.id}\n                      className={`rounded-xl w-28 h-28 ${\n                        index === selectedOrderDetailIndex\n                          ? \"bg-blue-100 border border-blue-300\"\n                          : \"bg-gray-50 border border-gray-200\"\n                      }`}\n                      bindtap={() => setSelectedOrderDetailIndex(index)}\n                    >\n                      <view className=\"rounded-md mb-2\">\n                        {detail.design?.thumbnailUrl && (\n                          <image\n                            src={detail.design.thumbnailUrl}\n                            className=\"w-28 h-28 rounded-md\"\n                          />\n                        )}\n                      </view>\n                    </view>\n                  ))}\n                </view>\n              </scroll-view>\n\n              {selectedOrderDetail && (\n                <view className=\"p-4 rounded-xl bg-gray-50 border border-gray-200\">\n                  <view className=\"flex-row justify-between items-center mb-3\">\n                    <text className=\"font-semibold text-gray-800 mb-2\">\n                      {selectedOrderDetail.systemConfigVariant?.product?.name ||\n                        \"Product\"}\n                    </text>\n                    <view\n                      className={`px-3 py-1 rounded-full ${\n                        getStatusColor(selectedOrderDetail.status, false).bg\n                      } ${\n                        getStatusColor(selectedOrderDetail.status, false).border\n                      }`}\n                    >\n                      <text\n                        className={` font-bold ${\n                          getStatusColor(selectedOrderDetail.status, false).text\n                        }`}\n                      >\n                        {selectedOrderDetail.status}\n                      </text>\n                    </view>\n                  </view>\n\n                  <view className=\"flex-row mb-3\">\n                    <view className=\"flex items-center mb-2\">\n                      <text className=\"text-gray-500 mr-2\">Size</text>\n                      <text className=\"font-medium text-gray-800\">\n                        {selectedOrderDetail.systemConfigVariant?.size || \"N/A\"}\n                      </text>\n                    </view>\n\n                    <view className=\"flex items-center mb-2\">\n                      <text className=\"text-gray-500 mr-2\">Color</text>\n                      <view className=\"flex-row items-center\">\n                        <view\n                          className=\"w-3 h-3 rounded-full mr-1\"\n                          style={{\n                            backgroundColor:\n                              selectedOrderDetail.systemConfigVariant?.color ||\n                              \"#ccc\",\n                          }}\n                        />\n                      </view>\n                    </view>\n                    <view className=\"flex items-center\">\n                      <text className=\"text-gray-500 mr-2\">Quantity</text>\n                      <text className=\"font-medium text-gray-800\">\n                        {selectedOrderDetail.quantity}\n                      </text>\n                    </view>\n                  </view>\n\n                  <view className=\"flex-row justify-between\">\n                    <view className=\"flex items-center mb-2\">\n                      <text className=\"text-gray-500 mr-2\">Completed</text>\n                      <text className=\"font-medium text-green-600\">\n                        {selectedOrderDetail.completedQty || 0}\n                      </text>\n                    </view>\n                    <view className=\"flex items-center mb-2\">\n                      <text className=\"text-gray-500 mr-2\">Rejected</text>\n                      <text className=\"font-medium text-red-600\">\n                        {selectedOrderDetail.rejectedQty || 0}\n                      </text>\n                    </view>\n                    <view className=\"flex items-center mb-2\">\n                      <text className=\"text-gray-500 mr-2\">Rework</text>\n                      <text className=\"font-medium text-gray-800\">\n                        {selectedOrderDetail.isRework\n                          ? `Yes (${selectedOrderDetail.reworkTime || 0})`\n                          : \"No\"}\n                      </text>\n                    </view>\n                  </view>\n                </view>\n              )}\n            </view>\n\n            {/* Quality Checks */}\n            {selectedOrderDetail &&\n            selectedOrderDetail.checkQualities &&\n            selectedOrderDetail.checkQualities.length > 0 ? (\n              <view className=\"bg-white rounded-2xl border border-gray-200 p-5 mb-4\">\n                <text className=\"text-lg font-bold text-gray-800 mb-4\">\n                  Quality Checks\n                </text>\n\n                {selectedOrderDetail.checkQualities.map((check, index) => (\n                  <view\n                    key={check.id}\n                    className=\"p-4 rounded-xl bg-gray-50 border border-gray-200 mb-3\"\n                  >\n                    <view className=\"flex-row justify-between items-center mb-3\">\n                      <text className=\"font-semibold text-gray-800 mb-2\">\n                        Quality Check #{index + 1}\n                      </text>\n                      <view\n                        className={`px-3 py-1 rounded-full ${\n                          getStatusColor(check.status, false).bg\n                        } ${getStatusColor(check.status, false).border}`}\n                      >\n                        <text\n                          className={` font-bold ${\n                            getStatusColor(check.status, false).text\n                          }`}\n                        >\n                          {check.status}\n                        </text>\n                      </view>\n                    </view>\n\n                    <view className=\"flex-row mb-3\">\n                      <view className=\"flex items-center mb-2\">\n                        <text className=\"text-gray-500 mr-2\">\n                          Total Checked\n                        </text>\n                        <text className=\"font-medium text-gray-800\">\n                          {check.totalChecked || 0}\n                        </text>\n                      </view>\n                      <view className=\"flex items-center mb-2\">\n                        <text className=\"text-gray-500 mr-2\">Passed</text>\n                        <text className=\"font-medium text-green-600\">\n                          {check.passedQuantity || 0}\n                        </text>\n                      </view>\n                    </view>\n\n                    {/* Conditional Quality Check Form */}\n                    {(order.status === OrderStatus.WaitingForCheckingQuality ||\n                      order.status === OrderStatus.ReworkRequired) &&\n                      check.status === OrderDetailStatus.Pending && (\n                        <view className=\"p-3 rounded-lg bg-white border border-gray-200 mb-3\">\n                          <text className=\"text-lg font-semibold text-gray-700 mb-2\">\n                            Complete Quality Check\n                          </text>\n\n                          <view className=\"flex items-center mb-3\">\n                            <text className=\"text-gray-500 mr-2\">\n                              Passed Quantity:\n                            </text>\n                            <input\n                              type=\"number\"\n                              className=\"w-20 h-8 px-2 border border-slate-300 rounded-xl text-lg\"\n                              placeholder=\"0\"\n                              min=\"0\"\n                              max={selectedOrderDetail.quantity}\n                              id={`passed-qty-${check.id}`}\n                              value={passedQty}\n                              bindinput={(event: any) =>\n                                setPassedQty(Number(event.detail.value) || 0)\n                              }\n                            />\n                          </view>\n\n                          <view className=\"flex items-center mb-3\">\n                            <text className=\"text-gray-500 mr-2\">Note:</text>\n                            <input\n                              type=\"text\"\n                              className=\"flex-1 h-8 px-2 border border-slate-300 rounded-xl text-lg\"\n                              placeholder=\"Add a note (optional)\"\n                              value={note}\n                              bindinput={(event: any) =>\n                                setNote(event.detail.value || \"\")\n                              }\n                            />\n                          </view>\n\n                          <view\n                            className={`h-12 flex justify-center items-center rounded-xl ${\n                              qualityCheckLoading\n                                ? \"bg-indigo-300\"\n                                : \"bg-indigo-400\"\n                            } text-center`}\n                            bindtap={() => {\n                              handleQualityCheck(check.id, passedQty);\n                            }}\n                          >\n                            <text className=\"text-white text-lg font-medium\">\n                              {qualityCheckLoading\n                                ? \"Processing...\"\n                                : \"Complete Quality Check\"}\n                            </text>\n                          </view>\n\n                          {qualityCheckError && (\n                            <text className=\"text-red-500 text-sm mt-2\">\n                              {qualityCheckError}\n                            </text>\n                          )}\n\n                          {qualityCheckSuccess && (\n                            <text className=\"text-green-500 text-sm mt-2\">\n                              Quality check completed successfully!\n                            </text>\n                          )}\n                        </view>\n                      )}\n\n                    {check.task && (\n                      <view className=\"p-3 rounded-lg bg-white border border-gray-200\">\n                        <text className=\"text-lg font-semibold text-gray-700 mb-2\">\n                          Task Information:\n                        </text>\n\n                        <view className=\"flex-row justify-between mb-2\">\n                          <view className=\"flex items-center\">\n                            <text className=\"text-gray-500 mr-2\">\n                              Task Name:\n                            </text>\n                            <text className=\"text-sm font-medium text-gray-800\">\n                              {check.task.taskname}\n                            </text>\n                          </view>\n                        </view>\n\n                        <view className=\"flex-row justify-between mb-2\">\n                          <view className=\"flex items-center\">\n                            <text className=\"text-gray-500 mr-2\">\n                              Assignee:\n                            </text>\n                            <text className=\"text-sm font-medium text-gray-800\">\n                              {check.task.assignee?.name || \"Unassigned\"}\n                            </text>\n                          </view>\n                        </view>\n\n                        <view className=\"flex-row justify-between mb-2\">\n                          <view className=\"flex items-center\">\n                            <text className=\"text-gray-500 mr-2\">Status:</text>\n                            <view\n                              className={`px-2 py-0.5 rounded-full ${\n                                getStatusColor(check.task.status, false).bg\n                              } ${\n                                getStatusColor(check.task.status, false).border\n                              }`}\n                            >\n                              <text\n                                className={`font-bold ${\n                                  getStatusColor(check.task.status, false).text\n                                }`}\n                              >\n                                {check.task.status}\n                              </text>\n                            </view>\n                          </view>\n                        </view>\n\n                        {check.task.note && (\n                          <view className=\"mt-2\">\n                            <view className=\"flex items-center mb-2\">\n                              <text className=\"text-gray-500 mr-2\">Note:</text>\n                            </view>\n                            <text className=\"text-sm text-gray-700 bg-gray-50 p-2 rounded-md mt-1\">\n                              {check.task.note}\n                            </text>\n                          </view>\n                        )}\n                      </view>\n                    )}\n                  </view>\n                ))}\n              </view>\n            ) : (\n              <view className=\"bg-white rounded-2xl border border-gray-200 p-5 mb-4 items-center\">\n                <view className=\"w-28 h-28 bg-gray-200 rounded-full items-center justify-center mb-3\">\n                  <text className=\"text-2xl\">🔍</text>\n                </view>\n                <text className=\"text-lg font-semibold text-gray-800 text-center mb-2\">\n                  No Quality Checks Found\n                </text>\n                <text className=\"text-gray-500 text-center\">\n                  This product doesn't have any quality checks yet.\n                </text>\n              </view>\n            )}\n          </view>\n        )}\n\n        {/* Tasks Tab */}\n        {activeTab === \"tasks\" && (\n          <view>\n            {order.tasks && order.tasks.length > 0 ? (\n              <view className=\"bg-white rounded-2xl border border-gray-200 p-5 mb-4\">\n                <text className=\"text-lg font-bold text-gray-800 mb-4\">\n                  Tasks ({order.tasks.length})\n                </text>\n\n                {order.tasks.map((task, index) => (\n                  <view\n                    key={task.id}\n                    className=\"p-4 rounded-xl bg-gray-50 border border-gray-200 mb-3\"\n                  >\n                    <view className=\"flex-row justify-between items-center mb-2\">\n                      <text className=\"font-semibold text-gray-800\">\n                        {task.taskname}\n                      </text>\n                      <view\n                        className={`px-3 py-1 rounded-full ${\n                          getStatusColor(task.status, false).bg\n                        } ${getStatusColor(task.status, false).border}`}\n                      >\n                        <text\n                          className={` font-bold ${\n                            getStatusColor(task.status, false).text\n                          }`}\n                        >\n                          {task.status}\n                        </text>\n                      </view>\n                    </view>\n\n                    <text className=\"text-sm text-gray-700 mb-3\">\n                      {task.description}\n                    </text>\n\n                    <view className=\"flex-row mb-3\">\n                      <view className=\"mr-2\">\n                        <text className=\" text-gray-500\">Type</text>\n                        <text className=\"font-medium text-gray-800\">\n                          {task.taskType}\n                        </text>\n                      </view>\n                      <view className=\"mr-2\">\n                        <text className=\" text-gray-500\">Start Date</text>\n                        <text className=\"font-medium text-gray-800\">\n                          {formatDate(task.startDate)}\n                        </text>\n                      </view>\n                      <view className=\"\">\n                        <text className=\" text-gray-500\">Deadline</text>\n                        <text className=\"font-medium text-gray-800\">\n                          {formatDate(task.expiredTime)}\n                        </text>\n                      </view>\n                    </view>\n\n                    <view className=\"flex-row items-center\">\n                      <text className=\" text-gray-500 mr-2\">Assignee:</text>\n                      <view className=\"flex-row items-center\">\n                        <view className=\"w-6 h-6 rounded-full bg-blue-100 items-center justify-center mr-2\">\n                          <text className=\"text-blue-600 font-bold \">\n                            {task.assignee?.name?.charAt(0) || \"U\"}\n                          </text>\n                        </view>\n                        <text className=\"text-sm font-medium text-gray-800\">\n                          {task.assignee?.name || \"Unassigned\"}\n                        </text>\n                      </view>\n                    </view>\n\n                    {task.note && (\n                      <view className=\"mt-3 bg-white p-3 rounded-lg border border-gray-200\">\n                        <text className=\" text-gray-500\">Note:</text>\n                        <text className=\"text-sm text-gray-700\">\n                          {task.note}\n                        </text>\n                      </view>\n                    )}\n                  </view>\n                ))}\n              </view>\n            ) : (\n              <view className=\"bg-white rounded-2xl border border-gray-200 p-5 mb-4 items-center\">\n                <view className=\"w-28 h-28 bg-gray-200 rounded-full items-center justify-center mb-3\">\n                  <text className=\"text-2xl\">📋</text>\n                </view>\n                <text className=\"text-lg font-semibold text-gray-800 text-center mb-2\">\n                  No Tasks Found\n                </text>\n                <text className=\"text-gray-500 text-center\">\n                  This order doesn't have any tasks assigned yet.\n                </text>\n              </view>\n            )}\n          </view>\n        )}\n      </view>\n    </scroll-view>\n  );\n}\n"],"names":[],"mappings":"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"}